14-Bash使用详解

1. Shell简单介绍
	Bash进程 = Shell
	API： strace ls
	换shell ： ksh回车即是ksh ， 但命令不一定同 bash，而且不一定用的方便；

2.Bash变量
	自定义变量
		AAA=lixuefei
		echo $AAA		能取出AAA的值， 但 bash出一个新窗口，AAA变量就失效了
		export AAA 		变为全局变量
	
	set 查看所有变量（包含env）

	env 全局变量 
	export	设置全局变量 
		export AAA 		变为全局变量


	重要变量：
		echo $PATH   (执行命令时，去哪些目录去找命令执行文件)

	若bash有问题：
		/bin/bash/ifconfig    [lxf账户若想运行 ifconfig时，必须要写bash路径]

	增加Bash目录：
		PATH=$PATH:/data/lxf_python 	(当前生效)

		Bash初始化文件 (永久生效)
			vi ~/.bash_profile
				PATH=$PATH:/data/lxf_python 	(例如 Orcacle)

	$PS1
		决定当前提示符状态
		PS1="\u @ \h \w \t \:"    [命令行变为 root @ localhost ~ 10:11:13 \:]
		PS1="C:"

	清除变量
		exit 重新登录

	查询变量参数 (例如 \u \w \t)
		man bash
		/\\u 	查找\u,此时能找到 \u \v \V \w \W \! \# 等等

	注意：
		一个变量 一定要 export，否则 ./a.sh时， 脚本会新生成一个bash，这是自定义变量就不存在了

3. bash快捷键
	Tab		不全
	Tab双击	列出所有匹配的选择
	ctrl+c 	结束当前任务
	ctrl+z  当前任务暂停，并放到后台， 取出到前台用 fg %x(x=jobs的任务号)
	ctrl+s  停止屏幕输出
	ctrl+q  恢复屏幕输出
	ctrl+l  清屏
	ctrl+d  标准输入结束


4. 历史命令
	保留1000个， 保存在 set | grep HIS  == /root/.bash_history

	清楚记录，防泄密
	history -c

	自动清理，防泄密
		ls .bash*   [家目录下]
		vim .bash_logout
			clear
			history -c

	调用历史
		上下键
		Ctrl + r
		! + 数字 （数字是history的标号）

变量
	set     设置  set x=1000
	env 	显示
	unset   取消

alias别名
	alias x="echo LIXUEFEI"

运算符
	！20 		执行第20号命令
	！！ 		上一条命令
	* 			任意多个任意字符
	[abc]  	 	a or b or c
	[^abc]  	不是 a or b or c
	｛｝ 		枚举
	& 			把程序丢入后台
	~ 			家目录 cd ~lxf  /  cd ~ 自己的主目录
	% 			%1 后台的第1个任务
	() 			aaa() = 声明一个aaa的函数，
				aaa()
				{
				echo tis is aaa
				ls
				cd /tmp
				}
	"" 			touch "a b" 把空格作用屏蔽，可与 touch a b 做对比
	 			echo "a b $USER"
	'' 			包做有特殊符号都屏蔽， echo "a b $USER" ，其中$就是个普通字符被打印
	``			反引号
				echo `which ls`
				touch log`date +%m%d`
	[ -f /etc/passwd ]  中括号两边加空格
	[ -f /etc/passwd ]  && echo ok     &&代表前面的为True，则执行后面的命令
	|| 			前面的结果为 True时， 后面的不执行；

	判断 某程序是否安装  [ -d /oracle ] && echo begin the install (-d 判断是否为目录)

	[ $USER = root ] && echo hello root

定制bash
	每次 USER启动，都自动执行一些命令

	系统执行顺序
		/etc/profile      [针对所有人，统一的]
		~/.bash_profile
		~/.bashrc
		/etc/bashrc       [针对所有人，统一的]

	profile 在
	bashrc    在命令行输入bash时会执行

	中文、英文
		echo $LANG
		echo $LC_ALL 
		vi /etc/profile.d/lang.sh

每一次都登录中文
	vi ~/.bashrc
		export LANG="zh_CN.UTF-8"
		export LC_ALL="zh_CN.UTF-8"

系统全部变为中文
	vi /etc/sysconfig/i18n
		LANG="zh_CN.UTF-8"

14-Bash使用详解



